#Wikipedia API URL
service.wikipedia.host=https://en.wikipedia.org/w/rest.php/v1/page/
         
#Championship Microservice used in example 2 for a synchronous call between Curiosity and Championship
service.championship.host=http://localhost:8081
#Spring-Boot Embedded Tomacat port
server.port=8090


server.error.include-message=always
server.error.include-binding-errors=always
# (...) MySQL specific configuration items
# Creates the database 
spring.datasource.username=${SPRING_DATASOURCE_USERNAME} 
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.host=${SPRING_DATASOURCE_HOST}
spring.datasource.port=${SPRING_DATASOURCE_PORT}
spring.datasource.dbname=${SPRING_DATASOURCE_DBNAME}
spring.datasource.url=jdbc:mysql://${SPRING_DATASOURCE_HOST}:${SPRING_DATASOURCE_PORT}/${SPRING_DATASOURCE_DBNAME}?createDatabaseIfNotExist=true
# schema created or updated 
spring.jpa.hibernate.ddl-auto=update
# SQL visible in console
spring.jpa.show-sql=true

#kafka
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS}
spring.kafka.producer.bootstrap-servers=${KAFKA_PRODUCER_BOOTSTRAP_SERVERS}
spring.kafka.consumer.bootstrap-servers=${KAFKA_CONSUMER_BOOTSTRAP_SERVERS}
spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP_ID}
spring.kafka.consumer.auto-offset-reset=earliest

#curiosity.topic.name=myTopic


